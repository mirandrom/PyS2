{"abstract": "This article outlines an approach in the design, documentation, and evaluation of computer systems. This allows the use of software in many safety-critical applications because it enables the systematic comparison of the program behavior with the engineering specifications of the computer system. Many of the ideas in this article have been used by the Atomic Energy Control Board of Canada in its safety assessment of the software for the shutdown systems of the Darlington Station. The four main elements of this approach follow: (1) Formal Documentation of Software Requirements: Most of the details of a complex environment can be ignored by system implementers and reviewers if they are given a complete and precise statement of the behavioral requirements for the computer system. We describe five mathematical relations that specify the requirements for the software in a computerized control system. (2) Design and Documentation of the Module Structure: Complexity caused by interactions between separately written components can be reduced by applying Data Abstraction, Abstract Data Types, and Object-Oriented Programming if the interfaces are precisely and completely documented. (3) Program Function Documentation: Software executions are lengthy sequences of state changes described by algorithms. The effects of these executive sequences can be preciselymore\u00a0\u00bb specified documented with tabular presentations of the program functions. Also, large programs can be decomposed and presented at a collection of well-documented smaller programs. (4) Tripod Approach to Assessment: There are three basic approaches to the assessment of complex software products: (i) testing, (ii) systematic inspection, and (iii) certification of people and processes. Assessment of a complex system cannot depend on any one of these alone. The approach used on the Darlington shutdown software, which included systematic inspection as well as planned and statistically designed random testing, is outlined.\u00ab\u00a0less", "arxivId": null, "authors": [{"authorId": "1726629", "name": "D. Parnas", "url": "https://www.semanticscholar.org/author/1726629"}, {"authorId": "48637958", "name": "J. Madey", "url": "https://www.semanticscholar.org/author/48637958"}], "citationVelocity": 0, "citations": [{"arxivId": null, "authors": [{"authorId": "3050077", "name": "E. I. Leonard", "url": null}, {"authorId": "3093759", "name": "C. Heitmeyer", "url": null}], "doi": "10.1023/A:1023072104553", "intent": [], "isInfluential": false, "paperId": "0d59f415b0d26307bfae31e4bed5a3aa9751cde4", "title": "Program Synthesis from Formal Requirements Specifications Using APTS", "url": "https://www.semanticscholar.org/paper/0d59f415b0d26307bfae31e4bed5a3aa9751cde4", "venue": "High. Order Symb. Comput.", "year": 2003}, {"arxivId": null, "authors": [{"authorId": "153690237", "name": "Yaguang Yang", "url": null}], "doi": null, "intent": ["background"], "isInfluential": false, "paperId": "171024333b12ff42e3768aedac5a54736ef0915e", "title": "A Probabilistic Assessment Method for Software Reliability in the Application of Safety Standards", "url": "https://www.semanticscholar.org/paper/171024333b12ff42e3768aedac5a54736ef0915e", "venue": "", "year": 2017}], "corpusId": 106666368, "doi": null, "fieldsOfStudy": ["Engineering"], "influentialCitationCount": 2, "is_open_access": false, "is_publisher_licensed": false, "paperId": "a00a1d33d7cde648ca163f253e78a92047a65766", "references": [], "title": "Assessment of safety-critical software in nuclear power plants", "topics": [{"topic": "Laser Therapy, Low-Level", "topicId": "196466", "url": "https://www.semanticscholar.org/topic/196466"}, {"topic": "Nuclear Power Plants", "topicId": "25645", "url": "https://www.semanticscholar.org/topic/25645"}], "url": "https://www.semanticscholar.org/paper/a00a1d33d7cde648ca163f253e78a92047a65766", "venue": "", "year": 1991, "obtained_utc": "2021-04-05T18:24:40.291070"}